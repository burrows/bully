
Bully.init_string = function() {
  Bully.String = Bully.define_class('String');

  Bully.String.make = function(js_str) {
    var s = Bully.make_object({}, Bully.String);
    s.data = js_str;
    return s;
  };

  Bully.String.cat = function(str, js_str) {
    str.data += js_str;
    return str;
  };

  Bully.String.hash = function(str) {
    var s = str.data, len = s.length, key = 0, i;

    for (i = 0; i < len; i += 1) {
      key += s.charCodeAt(i);
      key += (key << 10);
      key ^= (key >> 6);
    }

    key += (key << 3);
    key ^= (key >> 11);
    key += (key << 15);

    return key;
  };

  Bully.String.slice = function(str, args) {
    var s = str.data, i1 = args[0], i2 = args[1];

    return Bully.String.make(s.slice(i1, i1 + i2));
  };

  Bully.String.equals = function(str, args) {
    return str.data === args[0].data;
  };

  Bully.define_method(Bully.String, 'initialize', function(self, args) {
    self.data = args.length > 0 ? send(args[0], 'to_s').data : "";
    return self;
  }, 0, 1);

  Bully.define_method(Bully.String, 'to_s', function(self, args) {
    return self;
  }, 0, 0);

  Bully.String.inspect = function(self) {
    return Bully.String.make(JSON.stringify(self.data));
  };

  Bully.define_method(Bully.String, 'inspect', Bully.String.inspect, 0, 0);

  Bully.define_method(Bully.String, '<<', function(self, args) {
    Bully.String.cat(self, send(args[0], 'to_s').data);
    return self;
  }, 1, 1);

  Bully.String.to_sym = function(self) { return self.data; };
  Bully.define_method(Bully.String, 'to_sym', Bully.String.to_sym, 0, 0);

  // FIXME: properly alias this method
  Bully.define_method(Bully.String, '+', Bully.String.m_tbl['<<']);

  Bully.define_method(Bully.String, 'hash', Bully.String.hash, 0, 0);
  Bully.define_method(Bully.String, 'slice', Bully.String.slice, 2, 2);
  Bully.define_method(Bully.String, '==', Bully.String.equals, 1, 1);
};

