Bully.init_class = function() {
  Bully.define_method(Bully.Class, 'allocate', function(self, args) {
    return Bully.class_boot();
  });

  Bully.define_method(Bully.Class, 'initialize', function(self, args) {
    var _super = args[0] || Bully.Object;

    self._super = _super;
    Bully.make_metaclass(self, _super.klass);
    Bully.ivar_set(self, '__classpath__', "");
    Bully.class_inherited(_super, self);

    return self;
  }, 0, 1);

  Bully.define_method(Bully.Class, 'new', function(self, args) {
    var o = send(self, 'allocate');
    o.klass = self;

    if (Bully.respond_to(o, 'initialize')) {
      Bully.dispatch_method(o, 'initialize', args);
    }

    return o;
  });

  Bully.define_method(Bully.Class, 'superclass', function(self, args) {
    var klass = self._super;

    while (klass && klass.is_include_class) {
      klass = klass._super;
    }

    return klass || null;
  });
};

