require('unit_test')

class ArrayTest < UnitTest
  def test_include_should_return_true_if_array_contains_argument
    a = [4, 'foo', :stuff, false]
    assert_equal(true, a.include?(4))
    assert_equal(true, a.include?('foo'))
    assert_equal(true, a.include?(:stuff))
    assert_equal(true, a.include?(false))
  end

  def test_include_should_return_false_if_array_does_not_contain_argument
    a = [4, 'foo', :stuff, false]
    assert_equal(false, a.include?(9))
    assert_equal(false, a.include?('bar'))
    assert_equal(false, a.include?(:things))
    assert_equal(false, a.include?(true))
  end

  def test_double_equal_method_should_return_false_if_lengths_differ
    a1 = [1,2,3]
    a2 = [1,2,3,4]

    assert_equal(false, a1 == a2)
    assert_equal(false, a2 == a1)
  end

  def test_double_equal_method_should_return_false_if_lengths_are_same_but_elements_differ
    a1 = ['foo','bar','baz']
    a2 = ['foo','bar','quux']

    assert_equal(false, a1 == a2)
    assert_equal(false, a2 == a1)
  end

  def test_double_equal_method_should_return_false_if_other_argument_is_not_an_array
    assert_equal(false, [] == 9)
  end

  def test_double_equal_method_should_return_true_if_lengths_are_same_and_elements_are_equal
    a1 = [1,:two,'three']
    a2 = [1,:two,'three']

    assert_equal(true, a1 == a2)
    assert_equal(true, a2 == a1)
  end

end

